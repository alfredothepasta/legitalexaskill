plugins {
    id 'java'
}

group = 'com.weber.cs3230'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

// Update and run this to update the gradle version for the project
wrapper {
    gradleVersion = '7.2'
}

dependencies {
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'com.google.code.gson:gson:2.8.8'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:1.9.5'
}

jar {
    archiveName 'chatbot.jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": "com.weber.cs3230.ChatMain"
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task generateAssignmentFile() {
    dependsOn jar
    doLast {
        //go gather all the git commit info every time
        def stdoutGitCommit = new ByteArrayOutputStream()
        exec {
            commandLine "git", "log", "-1", "--format=%h"
            standardOutput = stdoutGitCommit
        }
        def gitCommit = "$stdoutGitCommit".trim()

        def stdoutGitBranch = new ByteArrayOutputStream()
        exec {
            commandLine "git", "rev-parse", "--abbrev-ref", "HEAD"
            standardOutput = stdoutGitBranch
        }
        def gitBranch = "$stdoutGitBranch".trim()

        def stdoutGitRemote = new ByteArrayOutputStream()
        exec {
            commandLine "git", "config", "--get", "remote.origin.url"
            standardOutput = stdoutGitRemote
        }
        def gitRemote = "$stdoutGitRemote".trim()

        println "git info: remote='$gitRemote' branch='$gitBranch', commit='$gitCommit'"

        new File(projectDir, "submitToCanvas.asn").text = """
{
   "remote":"$gitRemote",
   "branch":"$gitBranch",
   "commit":"$gitCommit"
}
""".trim()
    }
}